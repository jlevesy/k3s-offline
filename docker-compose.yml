---
version: '3'

volumes:
  k3s-server: {}

networks:
  outer: ~
  inner:
    internal: true
    ipam:
      driver: default
      config:
        - subnet: "172.16.238.0/24"

services:
  # Inner networks cannot have any port forwarded directly.
  # Service forwarding TCP traffic received on port 6443
  # to the server on port 6443.
  gateway:
    image: traefik:v2.0.0-alpha8
    command:
      - "--api"
      - "--providers.docker"
      - "--log.level=DEBUG"
      - "--entryPoints.http.address=:80"
      - "--entryPoints.https.address=:443"
      - "--entryPoints.kubeapi.address=:6443"
    ports:
      - "6443:6443"
      - "8080:8080"
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - outer
      - inner

  squid:
    image: sameersbn/squid:3.5.27-1
    volumes:
      - ./config/squid.conf:/etc/squid/squid.conf:ro
    networks:
      outer: ~
      inner:
        ipv4_address: "172.16.238.50"

  server:
    image: rancher/k3s:v0.6.1
    command: server --disable-agent -no-deploy traefik
    labels:
      - traefik.tcp.routers.kube-apiserver.rule=HostSNI(`*`)
      - traefik.tcp.routers.kube-apiserver.entrypoints=kubeapi
      - traefik.tcp.routers.kube-apiserver.service=kube-apiserver
      - traefik.tcp.services.kube-apiserver.loadbalancer.server.port=6443
    environment:
      - K3S_CLUSTER_SECRET=somethingtotallyrandom
      - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
      - K3S_KUBECONFIG_MODE=666
    volumes:
      - k3s-server:/var/lib/rancher/k3s
      # This is just so that we get the kubeconfig file out
      - ./output:/output
    networks:
      - inner

  node:
    image: rancher/k3s:v0.6.1
    tmpfs:
      - /run
      - /var/run
    privileged: true
    depends_on:
      - server
    environment:
      - K3S_URL=https://server:6443
      - K3S_CLUSTER_SECRET=somethingtotallyrandom
    volumes:
      - ./images:/var/lib/rancher/k3s/agent/images
    networks:
      - inner
